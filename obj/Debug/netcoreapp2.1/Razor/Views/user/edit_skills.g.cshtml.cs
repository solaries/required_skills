#pragma checksum "/home/sphinx/code/required skills/Views/user/edit_skills.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "175462ae49cf4e200569ae18d6303c5e6d9bacd4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_user_edit_skills), @"mvc.1.0.view", @"/Views/user/edit_skills.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/user/edit_skills.cshtml", typeof(AspNetCore.Views_user_edit_skills))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"175462ae49cf4e200569ae18d6303c5e6d9bacd4", @"/Views/user/edit_skills.cshtml")]
    public class Views_user_edit_skills : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "/home/sphinx/code/required skills/Views/user/edit_skills.cshtml"
  
    List<Rs_71.Data.Models.Rs_71listing_site> data0  =  ( List<Rs_71.Data.Models.Rs_71listing_site>)@ViewBag.data0;

#line default
#line hidden
#line 5 "/home/sphinx/code/required skills/Views/user/edit_skills.cshtml"
   
 string sel = ""; 

#line default
#line hidden
            BeginContext(157, 269, true);
            WriteLiteral(@"
<div class=""card"">
    <div class=""card-body"">
        <h4 class=""card-title"">Edit skills</h4>
        <div class=""form-validation"">
            <form id =""widgetu1290""class=""form-valide"" action=""#""  method=""post"" enctype=""multipart/form-data""> 
                ");
            EndContext();
            BeginContext(427, 23, false);
#line 14 "/home/sphinx/code/required skills/Views/user/edit_skills.cshtml"
           Write(Html.AntiForgeryToken());

#line default
#line hidden
            EndContext();
            BeginContext(450, 99, true);
            WriteLiteral("  \r\n                                                        <input id=\"id\" name=\"id\"  type=\"hidden\"");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 549, "\"", 568, 1);
#line 15 "/home/sphinx/code/required skills/Views/user/edit_skills.cshtml"
WriteAttributeValue("", 557, ViewBag.id, 557, 11, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(569, 298, true);
            WriteLiteral(@" />

                   <div class=""form-group row"">
                            <label class=""col-lg-4 col-form-label"">Date</label>
                            <div class=""col-lg-6"">
                   <input id=""Date"" name=""Date"" required   type=""datetime"" class=""form-control"" maxlength=""1""");
            EndContext();
            BeginWriteAttribute("value", "\r\n                       value=\"", 867, "\"", 912, 1);
#line 21 "/home/sphinx/code/required skills/Views/user/edit_skills.cshtml"
WriteAttributeValue("", 899, ViewBag.Date, 899, 13, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(913, 98, true);
            WriteLiteral("    placeholder=\"date\" />\r\n                           <input id=\"oDate\" name=\"oDate\" type=\"hidden\"");
            EndContext();
            BeginWriteAttribute("value", "  value=\"", 1011, "\"", 1033, 1);
#line 22 "/home/sphinx/code/required skills/Views/user/edit_skills.cshtml"
WriteAttributeValue("", 1020, ViewBag.date, 1020, 13, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1034, 379, true);
            WriteLiteral(@"     />

                    </div>

                </div>

                   <div class=""form-group row"">
                            <label class=""col-lg-4 col-form-label"">Site</label>
                            <div class=""col-lg-6"">
                   <select class=""form-control"" id=""Site"" name=""Site"">
                   <option value="""">Select Site</option>
");
            EndContext();
#line 33 "/home/sphinx/code/required skills/Views/user/edit_skills.cshtml"
                    foreach (Rs_71.Data.Models.Rs_71listing_site item in data0)
                   {
                       sel = "";
                       if (ViewBag.site == item.Id.ToString())
                       {
                            sel = " selected ";
                       }

#line default
#line hidden
            BeginContext(1715, 32, true);
            WriteLiteral("                       <option  ");
            EndContext();
            BeginContext(1748, 3, false);
#line 40 "/home/sphinx/code/required skills/Views/user/edit_skills.cshtml"
                           Write(sel);

#line default
#line hidden
            EndContext();
            BeginContext(1751, 9, true);
            WriteLiteral("  value=\"");
            EndContext();
            BeginContext(1761, 7, false);
#line 40 "/home/sphinx/code/required skills/Views/user/edit_skills.cshtml"
                                        Write(item.Id);

#line default
#line hidden
            EndContext();
            BeginContext(1768, 3, true);
            WriteLiteral("\"> ");
            EndContext();
            BeginContext(1772, 14, false);
#line 40 "/home/sphinx/code/required skills/Views/user/edit_skills.cshtml"
                                                   Write(item.Site_name);

#line default
#line hidden
            EndContext();
            BeginContext(1786, 11, true);
            WriteLiteral("</option>\r\n");
            EndContext();
#line 41 "/home/sphinx/code/required skills/Views/user/edit_skills.cshtml"
                   }

#line default
#line hidden
            BeginContext(1819, 406, true);
            WriteLiteral(@"               </select>
                    </div>

                </div>

                   <div class=""form-group row"">
                            <label class=""col-lg-4 col-form-label"">Skill</label>
                            <div class=""col-lg-6"">
                           <input    id=""Skill"" name=""Skill"" required onkeyup=""doClean(this)"" type=""text"" class=""form-control"" maxlength=""60""");
            EndContext();
            BeginWriteAttribute("value", "\r\n                               value=\"", 2225, "\"", 2279, 1);
#line 51 "/home/sphinx/code/required skills/Views/user/edit_skills.cshtml"
WriteAttributeValue("", 2265, ViewBag.Skill, 2265, 14, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2280, 105, true);
            WriteLiteral("        placeholder=\"skill\" />\r\n                           <input id=\"oSkill\" name=\"oSkill\" type=\"hidden\"");
            EndContext();
            BeginWriteAttribute("value", "  value=\"", 2385, "\"", 2408, 1);
#line 52 "/home/sphinx/code/required skills/Views/user/edit_skills.cshtml"
WriteAttributeValue("", 2394, ViewBag.skill, 2394, 14, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2409, 5115, true);
            WriteLiteral(@"     />

                    </div>

                </div>

                <div class=""form-group row"">
                    <div class=""col-lg-8 ml-auto"">
                        <button type=""button"" class=""btn btn-primary"" onclick=""checkAndGo()"">Submit</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
<script> 
    var selectedRights = """"; 
    function setRight(id) { 
        selectedRights = document.getElementById(""selectedRights"").value;  
        if (selectedRights.indexOf(""sphinxcol"" + id + ""sphinxcol"") > -1) { 
            selectedRights = selectedRights.split(""sphinxcol"" + id + ""sphinxcol"").join(""""); 
        } 
        else { 
            selectedRights += ""sphinxcol"" + id + ""sphinxcol""; 
        } 
        document.getElementById(""selectedRights"").value = selectedRights;  
    } 
    function doClean(text) { 
        text.value = text.value.split(""'"").join("""");
        text.value = text.value.split("">"").jo");
            WriteLiteral(@"in("""");
        text.value = text.value.split(""<"").join("""");
        text.value = text.value.split(""~"").join("""");
        text.value = text.value.split(""&"").join("""");
        text.value = text.value.split(""\\"").join("""");
        text.value = text.value.split(""_"").join("""");
        text.value = text.value.split(""%"").join("""");
        text.value = text.value.split(""\"""").join("""");
    } 
    function doCleanN(text) {
        var list = ""0123456789"";
        var data = text.value;
        for (i = 0; i < data.length; i++) {
            if (list.indexOf(data.substring(i, i + 1)) == -1) {
                data = data.split(data.substring(i, i + 1)).join(""""); 
            }
        }
        text.value = data;
    } 
        function msg(txt) {
            sweetAlert(""..."", txt, ""info"");
        }
        function doCleanNumber(textBox) {
            var strVal;
            var strVal1;
            var strVal2;
            var dot;
            var i;
            var strComma;
            ");
            WriteLiteral(@"strVal2 = """";
            strComma = """";
            strVal1 = """";
            if (isNaN(textBox.value.split("","").join(""""))) {
                textBox.value = parseFloat(textBox.value.split("","").join(""""));
            }
            strVal = textBox.value;
            dot = 0;
            for (i = 0; i < strVal.length; i++) {
                if (strVal.substring(i, i + 1).indexOf('.') > -1) {
                    dot = dot + 1;
                }
                if ((strVal.substring(i, i + 1).indexOf('0') > -1) || (strVal.substring(i, i + 1).indexOf(""1"") > -1) || (strVal.substring(i, i + 1).indexOf(""2"") > -1) || (strVal.substring(i, i + 1).indexOf(""3"") > -1) || (strVal.substring(i, i + 1).indexOf(""4"") > -1) || (strVal.substring(i, i + 1).indexOf(""5"") > -1) || (strVal.substring(i, i + 1).indexOf(""6"") > -1) || (strVal.substring(i, i + 1).indexOf(""7"") > -1) || (strVal.substring(i, i + 1).indexOf(""8"") > -1) || (strVal.substring(i, i + 1).indexOf(""9"") > -1) || ((strVal.substring(i, i + 1).indexOf('.') > ");
            WriteLiteral(@"-1) && dot <= 1)) {
                    strVal1 = strVal1 + strVal.substring(i, i + 1)
                }
            }
            if ((strVal1.indexOf('.') == 0)) {
                strVal1 = ""0"" + strVal1;
            }
            if (strVal1.indexOf('.') > 0) {
                if (((strVal1.length) - (strVal1.indexOf('.') + 1)) > 2) {
                    strVal1 = strVal1.substring(0, strVal1.indexOf('.') + 3);
                }
            } 
            strVal = """";
            if (strVal1.indexOf('.') != -1) {
                strVal = strVal1.substring(strVal1.indexOf('.'), strVal1.indexOf('.') + 3);
                strVal1 = strVal1.substring(0, strVal1.indexOf('.'));
            } 
            while (strVal1.length > 0) {
                if (strVal1.length > 3) {
                    strVal2 = strVal1.substring(strVal1.length - 3, strVal1.length) + strComma + strVal2;
                    strVal1 = strVal1.substring(0, strVal1.length - 3);
                    strComma = "","";
      ");
            WriteLiteral(@"          }
                else {
                    strVal2 = strVal1 + strComma + strVal2;
                    strVal1 = """";
                }
            } 
            if (strVal2.indexOf('.') > 0) {
                strVal2 = strVal2.substring(0, strVal2.indexOf('.')); 
            } 
            textBox.value = strVal2 + strVal;
        } 
    function checkAndGo() { 
        
        doClean(document.getElementById(""Skill""));
         if (document.getElementById(""Date"").value.trim().length == 0) {
             msg(""Please enter date"");
             return;
         } 
         if (document.getElementById(""Site"").value.trim().length == 0) {
             msg(""Please select site"");
             return;
         } 
         if (document.getElementById(""Skill"").value.trim().length == 0) {
             msg(""Please enter skill"");
             return;
         } 

        document.getElementById(""widgetu1290"").submit(); 
    } 
</script> 
<script> 
    var statusMessage = """);
            EndContext();
            BeginContext(7525, 14, false);
#line 175 "/home/sphinx/code/required skills/Views/user/edit_skills.cshtml"
                    Write(ViewBag.status);

#line default
#line hidden
            EndContext();
            BeginContext(7539, 126, true);
            WriteLiteral("\" || false; \r\n    if (statusMessage != false && statusMessage.length > 0) {\r\n        msg(statusMessage); \r\n    }\r\n</script> \r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
